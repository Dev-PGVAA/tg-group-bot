import os
import sys
import time
import shutil
import signal
import logging
import subprocess

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(sys.stdout)
    ]
)

logger = logging.getLogger(__name__)

class TmuxBotManager:
    def __init__(self):
        self.session_name = "tg-bots"
        self.bot_pane = "bot"
        self.forwarder_pane = "forwarder"
        
    def check_tmux(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ tmux"""
        if not shutil.which("tmux"):
            logger.error("‚ùå tmux –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install tmux (–∏–ª–∏ brew install tmux)")
            return False
        return True
        
    def create_session(self):
        """–°–æ–∑–¥–∞–µ–º tmux —Å–µ—Å—Å–∏—é —Å –¥–≤—É–º—è –æ–∫–Ω–∞–º–∏"""
        try:
            # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –µ—Å—Ç—å
            subprocess.run(["tmux", "kill-session", "-t", self.session_name], 
                         capture_output=True, check=False)
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é —Å –ø–µ—Ä–≤—ã–º –æ–∫–Ω–æ–º
            subprocess.run([
                "tmux", "new-session", "-d", "-s", self.session_name,
                "-n", self.bot_pane, "bash"
            ], check=True)
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä–æ–µ –æ–∫–Ω–æ
            subprocess.run([
                "tmux", "new-window", "-t", self.session_name,
                "-n", self.forwarder_pane, "bash"
            ], check=True)
            
            # –†–∞–∑–¥–µ–ª—è–µ–º –æ–∫–Ω–∞ –Ω–∞ –ø–∞–Ω–µ–ª–∏
            subprocess.run([
                "tmux", "split-window", "-h", "-t", f"{self.session_name}:{self.bot_pane}",
                "bash"
            ], check=True)
            
            subprocess.run([
                "tmux", "split-window", "-h", "-t", f"{self.session_name}:{self.forwarder_pane}",
                "bash"
            ], check=True)
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞–Ω–µ–ª–∏
            subprocess.run([
                "tmux", "select-layout", "-t", f"{self.session_name}:{self.bot_pane}", "tiled"
            ], check=True)
            
            subprocess.run([
                "tmux", "select-layout", "-t", f"{self.session_name}:{self.forwarder_pane}", "tiled"
            ], check=True)
            
            logger.info("‚úÖ Tmux —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ —Å –¥–≤—É–º—è –æ–∫–Ω–∞–º–∏")
            return True
            
        except subprocess.CalledProcessError as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è tmux —Å–µ—Å—Å–∏–∏: {e}")
            return False
            
    def start_bot(self):
        """–ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞ –≤ –ø–µ—Ä–≤–æ–π –ø–∞–Ω–µ–ª–∏"""
        try:
            bot_cmd = f"cd {os.getcwd()} && python3 src/bot.py"
            subprocess.run([
                "tmux", "send-keys", "-t", f"{self.session_name}:bot",
                f"echo 'üöÄ –ó–∞–ø—É—Å–∫–∞—é DiedOnSteroidsBot...'", "Enter"
            ], check=True)
            time.sleep(1)
            subprocess.run([
                "tmux", "send-keys", "-t", f"{self.session_name}:bot",
                bot_cmd, "Enter"
            ], check=True)
            logger.info("‚úÖ DiedOnSteroidsBot –∑–∞–ø—É—â–µ–Ω –≤ –ø–µ—Ä–≤–æ–π –ø–∞–Ω–µ–ª–∏")
            
        except subprocess.CalledProcessError as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
            
    def start_forwarder(self):
        """–ó–∞–ø—É—Å–∫–∞–µ–º Forwarder –≤–æ –≤—Ç–æ—Ä–æ–º –æ–∫–Ω–µ"""
        try:
            forwarder_cmd = f"cd {os.getcwd()} && python3 src/forwarder.py"
            subprocess.run([
                "tmux", "send-keys", "-t", f"{self.session_name}:{self.forwarder_pane}",
                f"echo 'üöÄ –ó–∞–ø—É—Å–∫–∞—é Forwarder...'", "Enter"
            ], check=True)
            time.sleep(1)
            subprocess.run([
                "tmux", "send-keys", "-t", f"{self.session_name}:{self.forwarder_pane}",
                forwarder_cmd, "Enter"
            ], check=True)
            logger.info("‚úÖ Forwarder –∑–∞–ø—É—â–µ–Ω –≤–æ –≤—Ç–æ—Ä–æ–º –æ–∫–Ω–µ")
            
        except subprocess.CalledProcessError as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ forwarder: {e}")
            
    def attach_session(self):
        """–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ tmux —Å–µ—Å—Å–∏–∏"""
        try:
            logger.info("üîó –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ tmux —Å–µ—Å—Å–∏–∏...")
            logger.info("üí° –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:")
            logger.info("   - Ctrl+B, –∑–∞—Ç–µ–º 0/1 - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –æ–∫–Ω–∞–º–∏")
            logger.info("   - Ctrl+B, –∑–∞—Ç–µ–º —Å—Ç—Ä–µ–ª–∫–∏ - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –ø–∞–Ω–µ–ª—è–º–∏")
            logger.info("   - Ctrl+B, –∑–∞—Ç–µ–º D - –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è (–±–æ—Ç—ã –ø—Ä–æ–¥–æ–ª–∂–∞—Ç —Ä–∞–±–æ—Ç–∞—Ç—å)")
            logger.info("   - Ctrl+C - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π –±–æ—Ç")
            logger.info("   - exit - –∑–∞–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å")
            
            subprocess.run(["tmux", "attach-session", "-t", self.session_name])
            
        except subprocess.CalledProcessError as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Å—Å–∏–∏: {e}")
        except KeyboardInterrupt:
            logger.info("üì° –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —Å–µ—Å—Å–∏–∏...")
            
    def start_bots(self):
        """–ó–∞–ø—É—Å–∫ –æ–±–æ–∏—Ö –±–æ—Ç–æ–≤ –≤ tmux"""
        if not self.check_tmux():
            return False
            
        if not self.create_session():
            return False
            
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–æ–≤
        self.start_bot()
        time.sleep(2)
        self.start_forwarder()
        
        logger.info("‚úÖ –û–±–∞ –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–∞–Ω–µ–ª—è—Ö!")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Å—Å–∏–∏
        self.attach_session()
        
        return True
        
    def stop_bots(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –±–æ—Ç—ã"""
        try:
            logger.info("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –±–æ—Ç–æ–≤...")
            subprocess.run(["tmux", "kill-session", "-t", self.session_name], 
                         capture_output=True, check=False)
            logger.info("‚úÖ –ë–æ—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
            
    def show_status(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Å—Å–∏–∏"""
        try:
            result = subprocess.run([
                "tmux", "list-sessions", "-F", "#{session_name}: #{session_windows} windows"
            ], capture_output=True, text=True, check=True)
            
            if self.session_name in result.stdout:
                logger.info(f"üìä –°—Ç–∞—Ç—É—Å: {result.stdout.strip()}")
            else:
                logger.info("üìä –°–µ—Å—Å–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞")
                
        except subprocess.CalledProcessError:
            logger.info("üìä tmux –Ω–µ –∑–∞–ø—É—â–µ–Ω")

def signal_handler(signum, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
    logger.info(f"üì° –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}, –∑–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...")
    sys.exit(0)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    manager = TmuxBotManager()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        command = sys.argv[1].lower()
        
        if command == "stop":
            manager.stop_bots()
            return
        elif command == "status":
            manager.show_status()
            return
        elif command == "attach":
            try:
                subprocess.run(["tmux", "attach-session", "-t", manager.session_name])
            except KeyboardInterrupt:
                logger.info("üì° –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —Å–µ—Å—Å–∏–∏...")
            return
        elif command == "help":
            print("""
ü§ñ Telegram Bot Manager

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  python3 main.py          - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–æ–≤ –≤ tmux
  python3 main.py stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ—Ö –±–æ—Ç–æ–≤
  python3 main.py status   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
  python3 main.py attach   - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏
  python3 main.py help     - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ tmux:
  Ctrl+B, –∑–∞—Ç–µ–º —Å—Ç—Ä–µ–ª–∫–∏    - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –ø–∞–Ω–µ–ª—è–º–∏
  Ctrl+B, –∑–∞—Ç–µ–º D          - –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è (–±–æ—Ç—ã –ø—Ä–æ–¥–æ–ª–∂–∞—Ç —Ä–∞–±–æ—Ç–∞—Ç—å)
  Ctrl+C                   - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π –±–æ—Ç
  exit                     - –ó–∞–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å
            """)
            return
    
    try:
        if not manager.start_bots():
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–æ–≤")
            sys.exit(1)
    except KeyboardInterrupt:
        logger.info("üì° –ü–æ–ª—É—á–µ–Ω Ctrl+C, –∑–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...")
        manager.stop_bots()
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        manager.stop_bots()
        sys.exit(1)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        logger.info("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        logger.error(f"üí• –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

